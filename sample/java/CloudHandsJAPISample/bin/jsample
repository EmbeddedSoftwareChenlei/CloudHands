#!/bin/bash

#

################################
# constants
################################

JSAMPLE_DRIVER_CLASS="com.antell.cloudhands.api.sample.Simple"

CLEAN_FLAG=1
################################
# functions
################################

info() {
  if [ ${CLEAN_FLAG} -ne 0 ]; then
    local msg=$1
    echo "Info: $msg" >&2
  fi
}

warn() {
  if [ ${CLEAN_FLAG} -ne 0 ]; then
    local msg=$1
    echo "Warning: $msg" >&2
  fi
}

error() {
  local msg=$1
  local exit_code=$2

  echo "Error: $msg" >&2

  if [ -n "$exit_code" ] ; then
    exit $exit_code
  fi
}
set_LD_LIBRARY_PATH(){
#Append the JSAMPLE_JAVA_LIBRARY_PATH to whatever the user may have specified in
  if [ -n "${JSAMPLE_JAVA_LIBRARY_PATH}" ]; then
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${JSAMPLE_JAVA_LIBRARY_PATH}"
  fi
}

display_help() {
  cat <<EOF
Usage: $0 <command> [options]...

commands:
  help                  display this help text
  run                  run a jsample java main

  options:
  --conf,-c <conf>      use configs in <conf> directory
  --classpath,-C <cp>   append to the classpath
  -Dproperty=value      sets a Java system property value
  -Xproperty=value      sets a Java -X option
  -f <file>             specify a config file (required)

Note that if <conf> directory is specified, then it is always included first
in the classpath.

EOF
}

run_jsample() {
  local JSAMPLE_APPLICATION_CLASS

  if [ "$#" -gt 0 ]; then
    JSAMPLE_APPLICATION_CLASS=$1
    shift
  else
    error "Must specify jsample application class" 1
  fi

  if [ ${CLEAN_FLAG} -ne 0 ]; then
    set -x
  fi
  $EXEC $JAVA_HOME/bin/java $JAVA_OPTS $JSAMPLE_JAVA_OPTS "${arr_java_props[@]}" -cp "$JSAMPLE_CLASSPATH" \
      -Djava.library.path=$JSAMPLE_JAVA_LIBRARY_PATH "$JSAMPLE_APPLICATION_CLASS" $*
}

################################
# main
################################

# set default params
JSAMPLE_CLASSPATH=""
JSAMPLE_JAVA_LIBRARY_PATH="/usr/local/dpdk/CloudHands/lib"
JAVA_OPTS="-Xmx1024m -Djavax.xml.parsers.DocumentBuilderFactory=com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl"
LD_LIBRARY_PATH=""

opt_conf=""
opt_classpath=""
arr_java_props=()
arr_java_props_ct=0

mode=$1
shift

case "$mode" in
  help)
    display_help
    exit 0
    ;;
  run)
    opt_jsample=1
    ;;
    *)
    error "Unknown or unspecified command '$mode'"
    echo
    display_help
    exit 1
    ;;
esac

args=""
while [ -n "$*" ] ; do
  arg=$1
  shift

  case "$arg" in
    --conf|-c)
      [ -n "$1" ] || error "Option --conf requires an argument" 1
      opt_conf=$1
      shift
      ;;
    --classpath|-C)
      [ -n "$1" ] || error "Option --classpath requires an argument" 1
      opt_classpath=$1
      shift
      ;;
    -D*)
      arr_java_props[arr_java_props_ct]=$arg
      ((++arr_java_props_ct))
      ;;
    -X*)
      arr_java_props[arr_java_props_ct]=$arg
      ((++arr_java_props_ct))
      ;;
    *)
      args="$args $arg"
      ;;
  esac
done

# make opt_conf absolute
if [[ -n "$opt_conf" && -d "$opt_conf" ]]; then
  opt_conf=$(cd $opt_conf; pwd)
fi

# allow users to override the default env vars via conf/jsample-env.sh
if [ -z "$opt_conf" ]; then
  warn "No configuration directory set! Use --conf <dir> to override."
elif [ -f "$opt_conf/jsample-env.sh" ]; then
  info "Sourcing environment configuration script $opt_conf/jsample-env.sh"
  source "$opt_conf/jsample-env.sh"
fi

# prepend command-line classpath to env script classpath
if [ -n "${opt_classpath}" ]; then
  if [ -n "${JSAMPLE_CLASSPATH}" ]; then
    JSAMPLE_CLASSPATH="${opt_classpath}:${JSAMPLE_CLASSPATH}"
  else
    JSAMPLE_CLASSPATH="${opt_classpath}"
  fi
fi

if [ -z "${JSAMPLE_HOME}" ]; then
  JSAMPLE_HOME=$(cd $(dirname $0)/..; pwd)
fi

# prepend $JSAMPLE_HOME/lib jars to the specified classpath (if any)
if [ -n "${JSAMPLE_CLASSPATH}" ] ; then
  JSAMPLE_CLASSPATH="${JSAMPLE_HOME}/lib/*:$JSAMPLE_CLASSPATH"
else
  JSAMPLE_CLASSPATH="${JSAMPLE_HOME}/lib/*"
fi

# find java
if [ -z "${JAVA_HOME}" ] ; then
  warn "JAVA_HOME is not set!"
  # Try to use Bigtop to autodetect JAVA_HOME if it's available
  if [ -e /usr/libexec/bigtop-detect-javahome ] ; then
    . /usr/libexec/bigtop-detect-javahome
  elif [ -e /usr/lib/bigtop-utils/bigtop-detect-javahome ] ; then
    . /usr/lib/bigtop-utils/bigtop-detect-javahome
  fi

  # Using java from path if bigtop is not installed or couldn't find it
  if [ -z "${JAVA_HOME}" ] ; then
    JAVA_DEFAULT=$(type -p java)
    [ -n "$JAVA_DEFAULT" ] || error "Unable to find java executable. Is it in your PATH?" 1
    JAVA_HOME=$(cd $(dirname $JAVA_DEFAULT)/..; pwd)
  fi
fi

# prepend conf dir to classpath
if [ -n "$opt_conf" ]; then
  JSAMPLE_CLASSPATH="$opt_conf:$JSAMPLE_CLASSPATH"
fi

set_LD_LIBRARY_PATH
EXEC="exec"

# finally, invoke the appropriate command
if [ -n "$opt_jsample" ] ; then
  run_jsample $JSAMPLE_DRIVER_CLASS $args
else
  error "This message should never appear" 1
fi

exit 0
